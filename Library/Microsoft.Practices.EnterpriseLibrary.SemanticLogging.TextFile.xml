<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.SemanticLogging.TextFile</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Configuration.FlatFileSinkElement">
            <summary>
            Represents a flat file configuration element that can create an instance of a flat file sink.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Configuration.FlatFileSinkElement.CanCreateSink(System.Xml.Linq.XElement)">
            <summary>
            Determines whether this instance can create the specified configuration element.
            </summary>
            <param name="element">The configuration element.</param>
            <returns>
              <c>True</c> if this instance can create the specified element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Configuration.FlatFileSinkElement.CreateSink(System.Xml.Linq.XElement)">
            <summary>
            Creates the <see cref="T:System.IObserver`1"/> instance for this sink.
            </summary>
            <param name="element">The configuration element.</param>
            <returns>
            The sink instance.
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Configuration.RollingFlatFileSinkElement">
            <summary>
            Represents a flat file configuration element that can create an instance of a flat file sink.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Configuration.RollingFlatFileSinkElement.CanCreateSink(System.Xml.Linq.XElement)">
            <summary>
            Determines whether this instance can create the specified configuration element.
            </summary>
            <param name="element">The configuration element.</param>
            <returns>
              <c>True</c> if this instance can create the specified element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Configuration.RollingFlatFileSinkElement.CreateSink(System.Xml.Linq.XElement)">
            <summary>
            Creates the <see cref="T:System.IObserver`1"/> instance for this sink.
            </summary>
            <param name="element">The configuration element.</param>
            <returns>
            The sink instance.
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.FlatFileLog">
            <summary>
            Factories and helpers for using the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.FlatFileLog.LogToFlatFile(System.IObservable{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry},System.String,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Formatters.IEventTextFormatter,System.Boolean)">
            <summary>
            Subscribes to an <see cref="T:System.IObservable`1"/> using a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink"/>.
            </summary>
            <param name="eventStream">The event stream. Typically this is an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.ObservableEventListener"/>.</param>
            <param name="fileName">Name of the file.</param>
            <param name="formatter">The formatter.</param>
            <param name="isAsync">Specifies if the writing should be done asynchronously, or synchronously with a blocking call.</param>
            <returns>A subscription to the sink that can be disposed to unsubscribe the sink and dispose it, or to get access to the sink instance.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.FlatFileLog.CreateListener(System.String,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Formatters.IEventTextFormatter,System.Boolean)">
            <summary>
            Creates an event listener that logs using a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink"/>.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="formatter">The formatter.</param>
            <param name="isAsync">Specifies if the writing should be done asynchronously, or synchronously with a blocking call.</param>
            <returns>An event listener that uses <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink"/> to log events.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.RollingFlatFileLog">
            <summary>
            Factories and helpers for using the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.RollingFlatFileLog.LogToRollingFlatFile(System.IObservable{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry},System.String,System.Int32,System.String,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollFileExistsBehavior,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Formatters.IEventTextFormatter,System.Int32,System.Boolean)">
            <summary>
            Subscribes to an <see cref="T:System.IObservable`1"/> using a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/>.
            </summary>
            <param name="eventStream">The event stream. Typically this is an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.ObservableEventListener"/>.</param>
            <param name="fileName">The filename where the entries will be logged.</param>
            <param name="rollSizeKB">The maximum file size (KB) before rolling.</param>
            <param name="timestampPattern">The date format that will be appended to the new roll file.</param>
            <param name="rollFileExistsBehavior">Expected behavior that will be used when the roll file has to be created.</param>
            <param name="rollInterval">The time interval that makes the file to be rolled.</param>
            <param name="formatter">The formatter.</param>
            <param name="maxArchivedFiles">The maximum number of archived files to keep.</param>
            <param name="isAsync">Specifies if the writing should be done asynchronously, or synchronously with a blocking call.</param>
            <returns>A subscription to the sink that can be disposed to unsubscribe the sink and dispose it, or to get access to the sink instance.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.RollingFlatFileLog.CreateListener(System.String,System.Int32,System.String,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollFileExistsBehavior,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Formatters.IEventTextFormatter,System.Int32,System.Boolean)">
            <summary>
            Creates an event listener that logs using a <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/>.
            </summary>
            <param name="fileName">The filename where the entries will be logged.</param>
            <param name="rollSizeKB">The maximum file size (KB) before rolling.</param>
            <param name="timestampPattern">The date format that will be appended to the new roll file.</param>
            <param name="rollFileExistsBehavior">Expected behavior that will be used when the roll file has to be created.</param>
            <param name="rollInterval">The time interval that makes the file to be rolled.</param>
            <param name="formatter">The formatter.</param>
            <param name="maxArchivedFiles">The maximum number of archived files to keep.</param>
            <param name="isAsync">Specifies if the writing should be done asynchronously, or synchronously with a blocking call.</param>
            <returns>An event listener that uses <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/> to log events.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink">
            <summary>
            A sink that writes to a flat file.
            </summary>    
            <remarks>This class is thread-safe.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Formatters.IEventTextFormatter,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="formatter">The formatter for entries</param>
            <param name="isAsync">Specifies if the writing should be done asynchronously, or synchronously with a blocking call.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.FlushAsync">
            <summary>
            Flushes the buffer content to the file.
            </summary>
            <returns>The Task that gets completed when the buffer is flushed.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">A value indicating whether or not the class is disposing.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.OnCompleted">
            <summary>
            Notifies the observer that the provider has finished sending push-based notifications.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.OnError(System.Exception)">
            <summary>
            Notifies the observer that the provider has experienced an error condition.
            </summary>
            <param name="error">An object that provides additional information about the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.FlatFileSink.OnNext(Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry)">
            <summary>
            Provides the sink with new data to write.
            </summary>
            <param name="value">The current entry to write to the file.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollFileExistsBehavior">
            <summary>
            Defines the behavior when the roll file is created.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollFileExistsBehavior.Overwrite">
            <summary>
            Overwrites the file if it already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollFileExistsBehavior.Increment">
            <summary>
            Use a sequence number at the end of the generated file if it already exists.
            </summary>
            <remarks>
            If it fails again then increment the sequence until a non existent filename is found.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFilePurger">
            <summary>
            Purges archive files generated by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFilePurger.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFilePurger"/> class.
            </summary>
            <param name="directory">The folder where archive files are kept.</param>
            <param name="baseFileName">The base name for archive files.</param>
            <param name="cap">The number of archive files to keep.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFilePurger.GetSequence(System.String)">
            <summary>
            Extracts the sequence number from an archive file name.
            </summary>
            <param name="fileName">The archive file name.</param>
            <returns>The sequence part of the file name.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFilePurger.Purge">
            <summary>
            Purges archive files.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink">
            <summary>
            A sink that writes to a flat file with a rolling overwrite behavior. 
            </summary>
            <remarks>This class is thread-safe.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.#ctor(System.String,System.Int32,System.String,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollFileExistsBehavior,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval,System.Int32,Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Formatters.IEventTextFormatter,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/> class with the specified values.
            </summary>
            <param name="fileName">The filename where the entries will be logged.</param>
            <param name="rollSizeKB">The maximum file size (KB) before rolling.</param>
            <param name="timestampPattern">The date format that will be appended to the new roll file.</param>
            <param name="rollFileExistsBehavior">Expected behavior that will be used when the roll file has to be created.</param>
            <param name="rollInterval">The time interval that makes the file to be rolled.</param>
            <param name="maxArchivedFiles">The maximum number of archived files to keep.</param>
            <param name="formatter">The event entry formatter.</param>
            <param name="isAsync">Specifies if the writing should be done asynchronously, or synchronously with a blocking call.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.FlushAsync">
            <summary>
            Flushes the buffer content to the file.
            </summary>
            <returns>The Task that gets completed when the buffer is flushed.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">A value indicating whether or not the class is disposing.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.OnCompleted">
            <summary>
            Notifies the observer that the provider has finished sending push-based notifications.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.OnError(System.Exception)">
            <summary>
            Notifies the observer that the provider has experienced an error condition.
            </summary>
            <param name="error">An object that provides additional information about the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.OnNext(Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry)">
            <summary>
            Provides the sink with new data to write.
            </summary>
            <param name="value">The current entry to write to the file.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.RollingHelper">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper"/> for the flat file.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper"/> for the flat file.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.Tally">
            <summary>
            Gets the tally of the length of the string.
            </summary>
            <value>
            The tally of the length of the string.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.DateTimeProvider">
            <summary>
            A data time provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.DateTimeProvider.CurrentDateTime">
            <summary>
            Gets the current data time.
            </summary>
            <value>
            The current data time.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper">
            <summary>
            Encapsulates the logic to perform rolls.
            </summary>
            <remarks>
            If no rolling behavior has been configured no further processing will be performed.
            </remarks>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.managedWriter">
            <summary>
            A tally keeping writer used when file size rolling is configured.<para/>
            The original stream writer from the base trace listener will be replaced with
            this listener.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.owner">
            <summary>
            The trace listener for which rolling is being managed.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.performsRolling">
            <summary>
            A flag indicating whether at least one rolling criteria has been configured.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.#ctor(Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper"/>.
            </summary>
            <param name="owner">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink"/> to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.CalculateNextRollDate(System.DateTime)">
            <summary>
            Calculates the next roll date for the file.
            </summary>
            <param name="dateTime">The new date.</param>
            <returns>The new date time to use.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.CheckIsRollNecessary">
            <summary>
            Checks whether rolling should be performed, and returns the date to use when performing the roll.
            </summary>
            <returns>The date roll to use if performing a roll, or <see langword="null"/> if no rolling should occur.</returns>
            <remarks>
            Defer request for the roll date until it is necessary to avoid overhead.<para/>
            Information used for rolling checks should be set by now.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.ComputeArchiveFileName(System.String,System.DateTime)">
            <summary>
            Gets the file name to use for archiving the file.
            </summary>
            <param name="actualFileName">The actual file name.</param>
            <param name="currentDateTime">The current date and time.</param>
            <returns>The new file name.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.FindMaxSequenceNumber(System.String,System.String,System.String)">
            <summary>
            Finds the max sequence number for a log file.
            </summary>
            <param name="directoryName">The directory to scan.</param>
            <param name="fileName">The file name.</param>
            <param name="extension">The extension to use.</param>
            <returns>The next sequence number.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.PerformRoll(System.DateTime)">
            <summary>
            Perform the roll for the next date.
            </summary>
            <param name="rollDateTime">The roll date.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.RollIfNecessary">
            <summary>
            Rolls the file if necessary.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.UpdateRollingInformationIfNecessary">
            <summary>
            Updates book keeping information necessary for rolling, as required by the specified rolling configuration.
            </summary>
            <returns>true if update was successful, false if an error occurred.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.DateTimeProvider">
            <summary>
            Gets or sets current date time provider.
            </summary>
            <value>
            The provider for the current date. Necessary for unit testing.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollingFlatFileSink.StreamWriterRollingHelper.NextRollDateTime">
            <summary>
            Gets the next date when date based rolling should occur if configured.
            </summary>
            <value>
            The next date when date based rolling should occur if configured.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval">
            <summary>
            Defines the frequency when the file need to be rolled.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.None">
            <summary>
            None Interval.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.Minute">
            <summary>
            Minute Interval.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.Hour">
            <summary>
            Hour interval.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.Day">
            <summary>
            Day Interval.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.Week">
            <summary>
            Week Interval.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.Month">
            <summary>
            Month Interval.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.Year">
            <summary>
            Year Interval.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.RollInterval.Midnight">
            <summary>
            At Midnight.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter">
            <summary>
            Represents a file stream writer that keeps a tally of the length of the file.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter.#ctor(System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter"/> class with a <see cref="T:System.IO.FileStream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.FileStream"/> to write to.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter.#ctor(System.IO.FileStream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter"/> class with a <see cref="T:System.IO.FileStream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.FileStream"/> to write to.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/> to use.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter.Write(System.Char)">
            <summary>
            Writes a character to the stream.
            </summary>
            <param name="value">The character to write to the text stream. </param>
            <exception cref="T:System.ObjectDisposedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and current writer is closed. </exception>
            <exception cref="T:System.NotSupportedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"></see> is at the end the stream. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter.Write(System.Char[])">
            <summary>
            Writes a character array to the stream.
            </summary>
            <param name="buffer">A character array containing the data to write. If buffer is null, nothing is written. </param>
            <exception cref="T:System.ObjectDisposedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and current writer is closed. </exception>
            <exception cref="T:System.NotSupportedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"></see> is at the end the stream. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the specified buffer to the stream.
            </summary>
            <param name="buffer">A character array containing the data to write.</param>
            <param name="index">The index into buffer at which to begin writing.</param>
            <param name="count">The number of characters to read from buffer.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and current writer is closed. </exception>
            <exception cref="T:System.NotSupportedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"></see> is at the end the stream. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index or count is negative. </exception>
            <exception cref="T:System.ArgumentException">The buffer length minus index is less than count. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter.Write(System.String)">
            <summary>
            Writes a string to the stream.
            </summary>
            <param name="value">The string to write to the stream. If value is null, nothing is written. </param>
            <exception cref="T:System.ObjectDisposedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and current writer is closed. </exception>
            <exception cref="T:System.NotSupportedException"><see cref="P:System.IO.StreamWriter.AutoFlush"></see> is true or the <see cref="T:System.IO.StreamWriter"></see> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"></see> is at the end the stream. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Sinks.TallyKeepingFileStreamWriter.Tally">
            <summary>
            Gets the tally of the length of the string.
            </summary>
            <value>
            The tally of the length of the string.
            </value>
        </member>
    </members>
</doc>
